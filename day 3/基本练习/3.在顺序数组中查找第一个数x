//在顺序数组中查找第一个数x

#include <stdio.h>
//二分法
int main(int argc ,char argv[])
{
    int a[]={0,1,2,3,5,6,7,8,9,13},x=0,left=0,right=sizeof(a)/sizeof(a[0])-1,mid;
    scanf("%d",&x);
    while(left<=right)
    {
        mid = (left+right)/2;
        if(a[mid]<x)
        {
            left=mid+1;
        }else if(a[mid]>x)
        {
            right=mid-1;
        }else
        {
            printf("find");
            break;
        }
    }
    if(left>right)
    printf("no find");
    return 0;
}


/*int main(int argc ,char argv[])
{
    int a[]={0,1,2,3,4,5,6,7,8,9},x=0,i;
    scanf("%d",&x);
    int lg = sizeof(a)/sizeof(a[0]);
    for (i=0;i<lg;i++)
    {
        if(a[i] == x)
        {
            printf("find");
            break;
        }
    }
    if(i==lg)
    printf("no find");
    return 0;
}*/
