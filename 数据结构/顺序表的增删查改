typedef int SLDateType;
typedef struct SeqList
{
	SLDateType* a;
	size_t size;
	size_t capacity; // unsigned int
}SeqList;
void SeqListInit(SeqList* ps)
{
  assert(ps);
  ps->size = 0;
  ps->capacity = 1;
  ps->a = (SLDateType*)calloc(ps->capacity,sizeof(SLDateType));
}
void SeqListDestroy(SeqList* ps)
{
  assert(ps);
  free(ps->a);
  ps->a = NULL;
  ps->size = 0;
  ps->capacity = 1;
}
void SeqListPrint(SeqList* ps)
{
  assert(ps);
  int i=0;
  for(i=0;i<ps->size;++i)
  {
    printf("%d ",ps->a[i]);
  }
  printf("\n ");
}
void CheckCacpity(SeqList* ps)
{
  assert(ps);
  if(ps->size == ps->capacity)
  {
    ps->capacity *=2;
  }
  ps->a = (SLDateType*)realloc(ps->a,ps->capacity*sizeof(SLDateType));
}
void SeqListPushBack(SeqList* ps, SLDateType x)
{
  assert(ps);
  CheckCacpity(ps);
  ps->a[ps->size]=x;
  ++ps->size;
}
void SeqListPushFront(SeqList* ps, SLDateType x)
{
  assert(ps);
  CheckCacpity(ps);
  int end = ps->size;
  while(end>0)
  {
    ps->a[end]=ps->a[end-1];
    --end;
  }
  ps->a[0] = x;
  ++ps->size;
}
void SeqListPopBack(SeqList* ps)
{
  assert(ps);
  if(ps->size==0)
    return;
  --ps->size;
}
void SeqListPopFront(SeqList* ps)
{
  assert(ps);
  if(ps->size==0)
    return;
  int start = 1;
  for(start;start<ps->size;start++)
  {
    ps->a[start-1] = ps->a[start];
  }
  --ps->size;
}
int SeqListFind(SeqList* ps, SLDateType x)
{
  assert(ps);
  int i=0;
  for(i;i<ps->size;++i)
  {
    if(ps->a[i]==x)
      return i;
  }
  return -1;
}
void SeqListInsert(SeqList* ps, size_t pos, SLDateType x)
{
  assert(ps);
  assert(pos>=0 && pos<=ps->size);
  int end = ps->size;
  while(pos<end)
  {
    ps->a[end] = ps->a[end-1];
    --end;
  }
  ps->a[pos] = x;
  ++ps->size;
}
void SeqListErase(SeqList* ps, size_t pos)
{
  assert(ps);
  assert(pos>=0 && pos<=ps->size);
  while(pos<ps->size)
  {
    ps->a[pos] = ps->a[pos+1];
    ++pos;
  }
}
