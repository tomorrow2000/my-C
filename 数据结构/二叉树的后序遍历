/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int TreeSize(struct TreeNode* root)
{
    return !root? 0:TreeSize(root->left)+TreeSize(root->right)+1;
}

void Postorder(struct TreeNode* root,int *preturnVal,int *pi)
{
    if(!root)
        return;
    Postorder(root->left,preturnVal,pi);
    Postorder(root->right,preturnVal,pi);
    preturnVal[*pi] = root->val;
    ++(*pi);
}
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* postorderTraversal(struct TreeNode* root, int* returnSize){
    int size = TreeSize(root),i = 0;
    *returnSize = size;
    int *returnVal = (int *)malloc(sizeof(int)*size);
    Postorder(root,returnVal,&i);
    return returnVal;
}
